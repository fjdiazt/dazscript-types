declare class DzObject extends DzElement {
    aboutToAddModifier(p0: DzModifier): any;
    aboutToDelete(): any;
    aboutToFinalize(p0: DzVertexMesh): any;
    addDataItem(p0: DzElementData): any;
    addModifier(p0: DzModifier): any;
    addModifier(p0: DzModifier, p1: number): any;
    addPrivateProperty(p0: DzProperty): any;
    addProperty(p0: DzProperty): any;
    addShape(p0: DzShape): any;
    addShape(p0: DzShape, p1: number): any;
    beginEdit(): any;
    cachedGeomFinalized(): any;
    cachedGeomInvalidated(): any;
    cachedGeomUpdated(): any;
    cancelEdit(): any;
    clearAllAnimData(): any;
    clearAnimData(p0: DzTimeRange): any;
    copyFrom(p0: DzElement): any;
    copyToClipboard(): any;
    createElementCopy(p0: DzElementDuplicateContext): any;
    createElementCopySignal(p0: DzElementDuplicateContext): any;
    currentShapeSwitched(): any;
    deleteDataItem(p0: DzElementData): any;
    deleteLater(): any;
    destroyed(): any;
    destroyed(p0: QObject): any;
    findDataItem(p0: string): any;
    findDataItemIndex(p0: DzElementData): any;
    findMatchingProperty(p0: DzProperty): any;
    findModifier(p0: string): any;
    findModifierIndex(p0: DzModifier): any;
    findModifierIndexFromEnd(p0: DzModifier): any;
    findPrivateProperty(p0: string): any;
    findPrivateProperty(p0: string, p1: boolean): any;
    findPrivatePropertyByLabel(p0: string): any;
    findPrivatePropertyByLabel(p0: string, p1: boolean): any;
    findProperty(p0: string): any;
    findProperty(p0: string, p1: boolean): any;
    findPropertyByLabel(p0: string): any;
    findPropertyByLabel(p0: string, p1: boolean): any;
    finishEdit(): any;
    forceCacheUpdate(p0: DzNode): any;
    forceCacheUpdate(p0: DzNode, p1: boolean): any;
    getAttributes(p0: DzSettings): any;
    getBoundingBox(): any;
    getCachedGeom(): any;
    getCurrentShape(): DzShape;
    getDataItem(p0: number): any;
    getDataItemList(): any;
    getElementChild(p0: number): any;
    getElementParent(): any;
    getGeometryControl(): any;
    getLabel(): any;
    getLoadScript(): any;
    getLocalBoundingBox(): any;
    getLocalOrientedBox(): any;
    getModifier(p0: number): DzModifier;
    getName(): any;
    getNameEditScope(): any;
    getNumDataItems(): any;
    getNumElementChildren(): any;
    getNumModifiers(): any;
    getNumPrivateProperties(): any;
    getNumProperties(): any;
    getNumShapes(): any;
    getPrivateProperty(p0: number): any;
    getPrivatePropertyGroups(): any;
    getPrivatePropertyList(): any;
    getProperty(p0: number): any;
    getPropertyGroups(): any;
    getPropertyList(): any;
    getShape(p0: number): DzShape;
    getTypeLabel(): any;
    getUniqueDataItemName(p0: string): any;
    getUniquePrivatePropertyName(p0: string): any;
    getUniquePropertyName(p0: string): any;
    inEdit(): any;
    insertPrivateProperty(p0: number, p1: DzProperty): any;
    insertProperty(p0: number, p1: DzProperty): any;
    invalidateCache(): any;
    isBuildingGeom(): any;
    isBuildingGeomValid(): any;
    iskindof(p0: string): any;
    makePersistent(): any;
    modifierAdded(p0: DzModifier): any;
    modifierRemoved(p0: DzModifier): any;
    moveDataItemToIndex(p0: DzElementData, p1: number): any;
    moveModifier(p0: DzModifier): any;
    moveModifier(p0: DzModifier, p1: number): any;
    moveShape(p0: DzShape): any;
    moveShape(p0: DzShape, p1: number): any;
    privatePropertyAdded(p0: DzProperty): any;
    privatePropertyRemoved(p0: DzProperty): any;
    propertyAdded(p0: DzProperty): any;
    propertyRemoved(p0: DzProperty): any;
    removeAllModifiers(): any;
    removeAllShapes(): any;
    removeDataItem(p0: DzElementData): any;
    removeModifier(p0: DzModifier): any;
    removePrivateProperty(p0: DzProperty): any;
    removePrivateProperty(p0: string): any;
    removeProperty(p0: DzProperty): any;
    removeProperty(p0: string): any;
    removeShape(p0: number): any;
    setAllPrivatePropertyAttributesAsDefinitions(): any;
    setAllPropertyAttributesAsDefinitions(): any;
    setAttributes(p0: DzSettings): any;
    setLabel(p0: string): any;
    setLoadScript(p0: DzScript): any;
    setName(p0: string): any;
    shapeAdded(p0: DzShape): any;
    shapeRemoved(p0: DzShape): any;
    shouldSortOnLoad(): any;
    update(): any;

    // Signals
    cachedTopologyChanged(): any;
    drawnDataChanged(): any;
    labelChanged(p0: string): any;
    materialListChanged(): any;
    materialSelectionChanged(): any;
    materialSelectionSetsChanged(): any;
    modifierStackChanged(): any;
    nameChanged(p0: string): any;
    parentChanged(): any;
    privatePropertyListChanged(): any;
    privatePropertyListInTreeChanged(): any;
    privatePropertyTreeChanged(): any;
    propertyListChanged(): any;
    propertyListInTreeChanged(): any;
    propertyTreeChanged(): any;
    shapeTopologyChanged(): any;
    uvsChanged(): any;
}