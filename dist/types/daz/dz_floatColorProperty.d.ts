declare class DzFloatColorProperty extends DzColorProperty {
    static ALL_INTEREST: number;	// 4
    static HSL: number;	// 1
    static HSV: number;	// 0
    static NO_INTEREST: number;	// 0
    static RGB: number;	// 2
    static X_INTEREST: number;	// 1
    static Y_INTEREST: number;	// 2
    static Z_INTEREST: number;	// 3
    assetAuthor: QObject;	// ["","",""]
    assetFileRevision: QObject;	// 0.0.0.0
    assetId: string;	//
    assetModifiedDate: QObject;	// Invalid Date
    assetSource: QObject;	//
    emitValueChangedOnSceneClear: boolean;	// false
    name: string;	//
    objectName: string;	//
    //addValueToSettings(p0: DzSettings, p1: PropertyValueSettingsFlags): any;
    //addValueToSettings(p0: DzTime, p1: DzSettings, p2: PropertyValueSettingsFlags): any;
    adjustFloatColorValue(p0: DzFloatColor): any;
    adjustFloatColorValue(p0: DzTime, p1: DzFloatColor): any;
    adjustValue(p0: number): any;
    adjustValue(p0: DzTime, p1: number): any;
    aliasListChanged(): void;
    animationBlendModeChanged(): void;
    assetModified(): void;
    assetWasSaved(): void;
    autoFollowTargetUriChanged(p0: DzUri): void;
    beginEdit(): any;
    buildNameUriToRoot(): any;
    buildNameUriToRoot(p0: DzNode): any;
    canAnimate(): any;
    canAnimateChanged(p0: boolean): void;
    canAutoFollow(): any;
    canAutoFollowChanged(p0: boolean): void;
    cancelEdit(): any;
    clampedChanged(p0: boolean): void;
    className(): any;
    className(): any;
    clearMap(): any;
    clearRegion(): any;
    clearRegion(p0: boolean): any;
    controllerListChanged(): void;
    copyFrom(p0: DzProperty): any;
    copyMapFrom(p0: DzNumericProperty): any;
    copyToClipboard(): any;
    createAlias(): any;
    currentValueChanged(): void;
    currentValueIsDefaultValue(): any;
    currentValueIsDefinitionValue(): any;
    defaultMapGammaChanged(): void;
    defaultMapTextureTypeChanged(): void;
    deleteAllKeys(): any;
    deleteKeys(p0: DzTimeRange): any;
    deleteKeys(p0: number, p1: number): any;
    deleteLater(): any;
    deleteSelectedKeys(): any;
    destroyed(): void;
    destroyed(p0: QObject): void;
    doCurrentAttributesMatchDefinition(): any;
    doesClampChangeValue(): any;
    editFinished(): void;
    emitAnimationBlendModeChanged(): void;
    emitAutoFollowTargetUriChanged(p0: DzUri): void;
    emitCanAnimateChanged(p0: boolean): void;
    emitCanAutoFollowChanged(p0: boolean): void;
    emitClampedChanged(p0: boolean): void;
    emitCurrentValueChanged(): void;
    emitDefaultMapGammaChanged(): void;
    emitDefaultMapTextureTypeChanged(): void;
    emitEditFinished(): void;
    emitIsManipulatorChanged(p0: boolean): void;
    emitIsMappableChanged(): void;
    emitIsUserPropertyChanged(p0: boolean): void;
    emitKeySelectionChanged(p0: DzTimeRange): void;
    emitLinked(): void;
    emitLockStateChanged(): void;
    emitMapChanged(): void;
    emitMinMaxChanged(): void;
    emitOverridingControllersChanged(p0: boolean): void;
    emitRemoved(): void;
    emitTextureModifierChanged(): void;
    emitTextureModifierFlagsChanged(): void;
    emitUnlinked(): void;
    emitValueChanged(p0: DzTimeRange): void;
    findMatchingProperty(p0: DzNode): any;
    findMatchingProperty(p0: DzNode, p1: boolean): any;
    finishEdit(): any;
    getAlias(p0: number): any;
    getAliasTarget(): any;
    getAnimationBlendMode(): any;
    getAttributes(p0: DzPropertySettings): any;
    getAttributes(p0: DzPropertySettings): any;
    getAutoFollowTargetUri(): any;
    getColorValue(): any;
    getColorValue(p0: DzTime): any;
    getController(p0: number): any;
    getControllerList(): any;
    getDefaultColorValue(): any;
    getDefaultFloatColorValue(): any;
    getDefaultMapGamma(): any;
    getDefaultMapTextureType(): any;
    getDefaultValue(): any;
    getDoubleDefaultValue(): any;
    getDoubleValue(): any;
    getDoubleValue(p0: DzTime): any;
    getEmitValueChangedOnSceneClear(): any;
    getFloatColorFollowValue(): any;
    getFloatColorFollowValue(p0: DzTime): any;
    getFloatColorValue(): any;
    getFloatColorValue(p0: DzTime): any;
    getFloatMax(): any;
    getFloatMin(): any;
    getFloatMinMax(p0: number, p1: number): any;
    getFloatMinMax(p0: number, p1: number): any;
    getFloatSensitivity(): any;
    getFollowProperty(): any;
    getFollowValue(): any;
    getFollowValue(p0: DzTime): any;
    getGroup(): any;
    getGroupOnlyPath(): any;
    getIndexOfSlaveControllers(p0: DzController): any;
    getKeyColorValue(p0: number): any;
    getKeyFloatColorValue(p0: number): any;
    getKeyIndexRange(p0: DzTimeRange, p1: number): any;
    getKeyInterpolationTypeValues(p0: number): any;
    getKeyRange(): any;
    getKeyTime(p0: number): any;
    getKeyValue(p0: number): any;
    getLabel(): any;
    getLinkProperty(): any;
    getLocalFloatColorValue(): any;
    getLocalFloatColorValue(p0: DzTime): any;
    getLocalValue(): any;
    getLocalValue(p0: DzTime): any;
    getMapValue(): any;
    getMapValue(p0: DzTime): any;
    getMax(): any;
    getMin(): any;
    getNDoubleValue(): any;
    getNDoubleValue(p0: DzTime): any;
    getNValueCount(): any;
    getName(): any;
    getNumAliases(): any;
    getNumControllers(): any;
    getNumKeys(): any;
    getNumKeys(p0: DzTimeRange): any;
    getNumSelectedKeys(): any;
    getNumSlaveControllers(): any;
    getOwner(): any;
    getPath(): any;
    getPresentation(): any;
    getRawColorValue(): any;
    getRawColorValue(p0: DzTime): any;
    getRawFloatColorValue(): any;
    getRawFloatColorValue(p0: DzTime): any;
    getRawValue(): any;
    getRawValue(p0: DzTime): any;
    getRegion(): any;
    getSelectedKeyRange(): any;
    getSensitivity(): any;
    getSlaveController(p0: number): any;
    getSlaveControllerList(): any;
    getTextureModifier(): any;
    getTextureModifierFlags(): any;
    getValue(): any;
    getValue(p0: DzTime): any;
    getValueAsDouble(): any;
    getValueAsDouble(p0: DzTime): any;
    getValueAsFloatColor(): any;
    getValueAsFloatColor(p0: DzTime): any;
    getValueAsInt2(): any;
    getValueAsInt2(p0: DzTime): any;
    getValueAsVec2(): any;
    getValueAsVec2(p0: DzTime): any;
    getValueAsVec3(): any;
    getValueAsVec3(p0: DzTime): any;
    getWidgetClass(): any;
    getWidgetClass(p0: boolean): any;
    getWidgetClassOverride(): any;
    getWidgetClassOverride(p0: boolean): any;
    getXYZInterest(): any;
    groupChanged(p0: DzPropertyGroup): void;
    hasControllers(): any;
    hasKeys(): any;
    hasSlaveControllers(): any;
    hasWidgetClassOverride(): any;
    hasWidgetClassOverride(p0: boolean): any;
    hiddenChanged(p0: boolean): void;
    inherits(): any;
    inherits(p0: string): any;
    //insertController(p0: DzNumericController): any;
    //insertController(p0: DzNumericController, p1: number): any;
    invalidateCacheValue(): any;
    isAlias(): any;
    isCombinable(p0: DzProperty): any;
    isDynamicallyAutoFollow(): any;
    isDynamicallyHidden(): any;
    isEditing(): any;
    isFavorite(): any;
    isFavoriteChanged(p0: boolean): void;
    isGlobalFavorite(): any;
    isGlobalFavoriteChanged(p0: boolean): void;
    isHidden(): any;
    isInvalidWithoutMap(): any;
    isKey(p0: DzTime, p1: number): any;
    isManipulator(): any;
    isManipulatorChanged(p0: boolean): void;
    isMappable(): any;
    isMappableChanged(): void;
    isMaster(): any;
    isModulo(): any;
    isNew(): any;
    isNumeric(): any;
    isOverridingControllers(): any;
    isPrivateProperty(): any;
    isRigProperty(): any;
    isUserProperty(): any;
    isUserPropertyChanged(p0: boolean): void;
    iskindof(p0: string): any;
    keySelectionChanged(p0: DzTimeRange): void;
    keysAreClamped(): void;
    labelChanged(p0: string): void;
    linkTo(p0: DzNumericProperty): any;
    linked(): void;
    lock(p0: boolean): any;
    lockStateChanged(): void;
    makePersistent(): any;
    mapChanged(): void;
    minMaxChanged(): void;
    modifyAsset(): any;
    modifyAsset(p0: DzUri): any;
    moveControllerToIndex(p0: number, p1: number): any;
    moveControllerToIndex(p0: DzController, p1: number): any;
    nameChanged(p0: string): void;
    newStateChanged(): void;
    overridingControllersChanged(p0: boolean): void;
    presentationIconChanged(): void;
    propertyDeleted(p0: DzProperty): void;
    propertyDuplicate(): any;
    rawValueIsDefinitionValue(): any;
    regionChanged(): void;
    removeAllControllers(): any;
    removeController(p0: number): any;
    removeController(p0: DzController): any;
    removeController(p0: DzProperty): any;
    removed(): void;
    selectAllKeys(): any;
    selectAllKeys(p0: boolean): any;
    selectKey(p0: number): any;
    selectKey(p0: number, p1: boolean): any;
    selectKeys(p0: DzTimeRange, p1: boolean): any;
    selectionStateChanged(): void;
    setAttributes(p0: DzPropertySettings): any;
    setAttributes(p0: DzPropertySettings): any;
    setAutoFollowTargetUri(p0: DzUri): any;
    setCanAnimate(p0: boolean): any;
    setCanAutoFollow(p0: boolean): any;
    setColorValue(p0: QColor): any;
    setColorValue(p0: DzTime, p1: QColor): any;
    setCurrentAttributesAsDefinition(): any;
    setDefaultColorValue(p0: QColor): any;
    setDefaultFloatColorValue(p0: DzFloatColor): any;
    setDefaultValue(p0: number): any;
    setDoubleDefaultValue(p0: number): any;
    setDoubleValue(p0: number): any;
    setDoubleValue(p0: DzTime, p1: number): any;
    setFloatColorValue(p0: DzFloatColor): any;
    setFloatColorValue(p0: DzTime, p1: DzFloatColor, p2?: number, p3?: number, p4?: number, p5?: number): any;
    setFloatMax(p0: number): any;
    setFloatMin(p0: number): any;
    setFloatMinMax(p0: number, p1: number): any;
    setFloatSensitivity(p0: number): any;
    setFollowListeners(): any;
    setHidden(p0: boolean): any;
    setIsClamped(p0: boolean): void;
    setIsFavorite(p0: boolean): any;
    setIsGlobalFavorite(p0: boolean): any;
    setIsManipulator(p0: boolean): any;
    setIsMappable(p0: boolean): any;
    setIsModulo(p0: boolean): any;
    setIsRigProperty(p0: boolean): any;
    setIsUserProperty(p0: boolean): any;
    setKeyColorValue(p0: number, p1: QColor): any;
    setKeyInterpolation(p0: number, p1?: number, p2?: number, p3?: number, p4?: number): any;
    setKeyValue(p0: number, p1: number): any;
    setLabel(p0: string): any;
    setMap(p0: DzTexture): any;
    setMap(p0: string): any;
    setMustHaveMap(p0: boolean): any;
    setNew(p0: boolean): any;
    setOverrideControllers(p0: boolean): any;
    setPath(p0: string): any;
    setPresentation(p0: DzPresentation): any;
    setRawFloatColorValue(p0: DzFloatColor): any;
    setRawFloatColorValue(p0: DzTime, p1: DzFloatColor): any;
    setRegion(p0: DzGeometryRegion): any;
    setSelected(p0: boolean): void;
    setSensitivity(p0: number): any;
    //setTextureModifier(p0: DzTextureModifier): any;
    setValue(p0: number): any;
    setValue(p0: DzTime, p1: number): any;
    //setValueFromSettings(p0: DzSettings, p1: PropertyValueSettingsFlags): any;
    //setValueFromSettings(p0: DzTime, p1: DzSettings, p2: PropertyValueSettingsFlags): any;
    //setXYZInterest(p0: XYZInterest): any;
    slaveControllerListChanged(): void;
    textureModifierChanged(): void;
    textureModifierFlagsChanged(): void;
    toggleKeysAreClamped(): void;
    unlink(): any;
    unlinked(): void;
    valueChanged(p0: DzTimeRange): void;
}