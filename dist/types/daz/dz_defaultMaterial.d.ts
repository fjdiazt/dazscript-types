declare class DzDefaultMaterial extends DzMaterial {

    /* Properties */
    elementID: number;
    renderPriority: number;

    /* Methods */
    propertyListInTreeChanged(): any; // TODO ;
    privatePropertyListInTreeChanged(): any; // TODO ;
    mergeElementSignal(): any; // TODO ;
    duplicateElementSignal(): any; // TODO ;
    createElementCopySignal(): any; // TODO ;
    moveDataItemToIndex(): any; // TODO ;
    findDataItemIndex(): any; // TODO ;
    duplicateMissingCustomDataWithContext(): any; // TODO ;
    duplicateMissingPropertiesWithContext(): any; // TODO ;
    duplicateMissingPrivatePropertiesWithContext(): any; // TODO ;
    doMergeElement(): any; // TODO ;
    doDuplicateElement(): any; // TODO ;
    mergeElement(): any; // TODO ;
    duplicateElement(): any; // TODO ;
    createElementCopy(): any; // TODO ;
    calcNeedsPtexSignal(): any; // TODO ;
    tagsChanged(): any; // TODO ;
    isOpaque(): boolean;
    getTags(): any; // TODO ;
    getTagsControl(): any; // TODO ;
    needsPtex(): any; // TODO ;
    duplicateOrDefaultMaterial(): any; // TODO ;
    calcNeedsPtex(): any; // TODO ;
    setDiffuseStrength(val: number): void;
    setDiffuseValueMap(img: DzTexture): void;
    setAmbientStrength(val: number): void;
    setAmbientValueMap(img: DzTexture): void;
    setAmbientColor(color: QColor): void;
    setAmbientColorMap(img: DzTexture): void;
    setBumpMap(img: DzTexture): void;
    setBumpStrength(val: number): void;
    setBumpMin(val: number): void;
    setBumpMax(val: number): void;
    setDisplacementMap(img: DzTexture): void;
    setDisplacementStrength(val: number): void;
    setDisplacementMin(val: number): void;
    setDisplacementMax(val: number): void;
    setReflectionColor(color: QColor): void;
    setReflectionMap(img: DzTexture): void;
    setReflectionStrength(val: number): void;
    setReflectionValueMap(img: DzTexture): void;
    setRefractionColor(color: QColor): void;
    setRefractionColorMap(img: DzTexture): void;
    setRefractionStrength(val: number): void;
    setRefractionValueMap(img: DzTexture): void;
    setSheenColor(): any; // TODO ;
    setSheenColorMap(): any; // TODO ;
    setScatterColor(): any; // TODO ;
    setScatterColorMap(): any; // TODO ;
    setThickness(): any; // TODO ;
    setThicknessValueMap(): any; // TODO ;
    setIndexOfRefraction(val: number): void;
    setSurfaceType(val: number): void;
    setGlossinessStrength(size: number): void;
    setGlossinessValueMap(img: DzTexture): void;
    setMultThroughOpacity(onOff: boolean): void;
    setSpecularStrength(size: number): void;
    setSpecularValueMap(img: DzTexture): void;
    setSpecularColor(color: QColor): void;
    setSpecularColorMap(img: DzTexture): void;
    setNormalValueMap(img: DzTexture): void;
    setHorizontalTiles(tiles: number): void;
    setVerticalTiles(tiles: number): void;
    setHorizontalOffset(offset: number): void;
    setVerticalOffset(offset: number): void;
    getDiffuseStrength(): number;
    getDiffuseValueMap(): DzTexture;
    getAmbientStrength(): number;
    getAmbientValueMap(): DzTexture;
    getAmbientColor(): QColor;
    getAmbientColorMap(): DzTexture;
    getBumpStrength(): number;
    getBumpMap(): DzTexture;
    getBumpMin(): number;
    getBumpMax(): number;
    getDisplacementStrength(): number;
    getDisplacementMin(): number;
    getDisplacementMax(): number;
    getDisplacementMap(): DzTexture;
    getReflectionColor(): QColor;
    getReflectionMap(): DzTexture;
    getReflectionStrength(): number;
    getReflectionValueMap(): DzTexture;
    getRefractionColor(): QColor;
    getRefractionColorMap(): DzTexture;
    getRefractionStrength(): number;
    getRefractionValueMap(): DzTexture;
    getSheenColor(): any; // TODO ;
    getSheenColorMap(): any; // TODO ;
    getScatterColor(): any; // TODO ;
    getScatterColorMap(): any; // TODO ;
    getThickness(): any; // TODO ;
    getThicknessValueMap(): any; // TODO ;
    getIndexOfRefraction(): number;
    getSurfaceType(): number;
    isMultThroughOpacity(): boolean;
    getSpecularColor(): QColor;
    getSpecularColorMap(): DzTexture;
    getSpecularStrength(): number;
    getSpecularValueMap(): DzTexture;
    getGlossinessStrength(): number;
    getGlossinessValueMap(): DzTexture;
    getNormalValueMap(): DzTexture;
    getHorizontalOffset(): number;
    getHorizontalTiles(): number;
    getVerticalOffset(): number;
    getVerticalTiles(): number;
    getDiffuseColorControl(): DzColorProperty;
    getDiffuseStrengthControl(): DzFloatProperty;
    getAmbientColorControl(): DzColorProperty;
    getAmbientStrengthControl(): DzFloatProperty;
    getSpecularColorControl(): DzColorProperty;
    getSpecularStrengthControl(): DzFloatProperty;
    getGlossinessControl(): DzFloatProperty;
    getOpacityControl(): DzFloatProperty;
    getBumpControl(): DzFloatProperty;
    getBumpMinControl(): DzFloatProperty;
    getBumpMaxControl(): DzFloatProperty;
    getDisplacementControl(): DzFloatProperty;
    getDisplacementMinControl(): DzFloatProperty;
    getDisplacementMaxControl(): DzFloatProperty;
    getReflectionColorControl(): DzColorProperty;
    getReflectionStrengthControl(): DzFloatProperty;
    getRefractionColorControl(): DzColorProperty;
    getRefractionStrengthControl(): DzFloatProperty;
    getSheenColorControl(): any; // TODO ;
    getScatterColorControl(): any; // TODO ;
    getThicknessControl(): any; // TODO ;
    getIndexOfRefractionControl(): DzFloatProperty;
    getSurfaceTypeControl(): DzEnumProperty;
    getMultThroughOpacityControl(): DzBoolProperty;
    getNormalValueMapControl(): DzImageProperty;
    getHorizontalTilesControl(): DzFloatProperty;
    getHorizontalOffsetControl(): DzFloatProperty;
    getVerticalTilesControl(): DzFloatProperty;
    getVerticalOffsetControl(): DzFloatProperty;
}