declare class DzBasicCamera extends DzCamera {

    /* Properties */
    frameWidth: number;
    focalDistance: number;
    focalLength: number;
    type: number;
    nearClippingPlane: number;
    farClippingPlane: number;
    useLocalDimensions: boolean;
    pixelsWidth: number;
    pixelsHeight: number;
    aspectWidth: number;
    aspectHeight: number;
    aspectRatio: number;
    proportionsConstrained: boolean;
    headlightMode: any;
    headlightOffset: QObject;
    isPerspective: boolean;
    currentViewWidth: number;
    currentViewHeight: number;
    fStop: number;
    depthOfField: boolean;
    FRONT_CAMERA: number;
    BACK_CAMERA: number;
    LEFT_CAMERA: number;
    RIGHT_CAMERA: number;
    TOP_CAMERA: number;
    BOTTOM_CAMERA: number;
    PERSPECTIVE_CAMERA: number;
    ORTHO_CAMERA: number;
    GENERAL_CAMERA: number;
    LOCAL_PIXEL_WIDTH: number;
    LOCAL_PIXEL_HEIGHT: number;
    LOCAL_ASPECT_WIDTH: number;
    LOCAL_ASPECT_HEIGHT: number;

    /* Methods */
    pixelDimensionsChanged(): any; // TODO ;
    dimensionsChanged(): any; // TODO ;
    useLocalDimensionsChanged(): any; // TODO ;
    pixelsWidthChanged(): any; // TODO ;
    pixelsHeightChanged(): any; // TODO ;
    aspectWidthChanged(): any; // TODO ;
    aspectHeightChanged(): any; // TODO ;
    proportionsConstrainedChanged(): any; // TODO ;
    frameWidthChanged(): any; // TODO ;
    headlightModeChanged(): any; // TODO ;
    headlightOffsetChanged(): any; // TODO ;
    updateDimensions(): any; // TODO ;
    shouldDoHeadLight(): any; // TODO ;
    fStopChanged(range: DzTimeRange): void;
    depthOfFieldChanged(): void;
    setType(type: number): void;
    getFocalDistChannel(): DzFloatProperty;
    getFocalLengthChannel(): DzFloatProperty;
    getFStopChannel(): DzFloatProperty;
    getFrameWidthChannel(): any; // TODO ;
    getDepthOfFieldChannel(): DzBoolProperty;
    getDisplayPersistenceChannel(): DzBoolProperty;
    getSightLineOpacityChannel(): DzFloatProperty;
    getFovColorChannel(): DzColorProperty;
    getFovLengthChannel(): DzFloatProperty;
    getFovOpacityChannel(): DzFloatProperty;
    getFocalPointScaleChannel(): DzFloatProperty;
    getDofVisibilityChannel(): DzBoolProperty;
    getDofColorChannel(): DzColorProperty;
    getDofOverlayColorChannel(): DzColorProperty;
    getDofOverlayOpacityChannel(): DzFloatProperty;
    getNearDofVisibilityChannel(): DzBoolProperty;
    getFarDofVisibilityChannel(): DzBoolProperty;
    getHeadlampIntensityControl(): any; // TODO ;
    getLensThicknessControl(): any; // TODO ;
    cursorToScene(x: number, y: number, z: number): DzVec3;
    cursorToRay(x: number, y: number): DzVec3;
    isAtDefaultSceneCameraValues(): boolean;
    isDefaultSceneCamera(): boolean;
    setIsDefaultSceneCamera(yesNo: boolean): void;
}